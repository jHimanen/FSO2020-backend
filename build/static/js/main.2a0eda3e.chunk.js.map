{"version":3,"sources":["components/Persons.js","components/ContactForm.js","components/Filter.js","services/contacts.js","App.js","index.js"],"names":["Persons","people","deletePerson","map","person","key","id","name","nr","onClick","handledContact","window","confirm","ContactForm","props","onSubmit","add","value","onChange","nameChange","nrChange","type","Filter","filter","filterChange","axios","get","then","response","data","newContact","post","nukedContact","delete","concat","updatedContact","put","App","useState","persons","setPersons","newName","setNewName","newNr","setNewNr","newFilter","setNewFilter","showAll","setShowAll","notificationObject","setNotificationObject","useEffect","contactService","initialContacts","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","changeNotification","setTimeout","personsToShow","toLowerCase","includes","event","target","preventDefault","personObject","contact","find","p","changedContact","catch","error","alert","returnedContact","updatedContacts","ReactDOM","render","document","getElementById"],"mappings":"8OAoBeA,EAlBC,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aAQvB,OACID,EAAOE,KAAI,SAAAC,GAAM,OACb,uBAAGC,IAAKD,EAAOE,IACVF,EAAOG,KADZ,IACmBH,EAAOI,GACtB,4BAAQC,QAAS,kBAVPC,EAU0BN,OATxCO,OAAOC,QAAP,iBAAyBF,EAAeH,KAAxC,OACAL,EAAaQ,IAFA,IAACA,IAUV,eCIDG,EAhBK,SAACC,GACjB,OACI,0BAAMC,SAAUD,EAAME,KAClB,sCACU,2BAAOC,MAAOH,EAAMP,KAAMW,SAAUJ,EAAMK,cAEpD,wCACY,2BAAOF,MAAOH,EAAMN,GAAIU,SAAUJ,EAAMM,YAEpD,6BACI,4BAAQC,KAAK,UAAb,UCFDC,EARA,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,OAAQC,EAAmB,EAAnBA,aACtB,OACI,wCACY,2BAAOP,MAAOM,EAAQL,SAAUM,M,gBCmBrC,EApBA,WAEX,OADgBC,IAAMC,IAHV,YAIGC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB9B,EAfA,SAAAC,GAEX,OADgBL,IAAMM,KARV,WAQwBD,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa9B,EAVF,SAAAG,GAET,OADgBP,IAAMQ,OAbV,WAayBC,OAAR,WAAmBF,EAAa1B,MAC9CqB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAAAM,GAEX,OADgBV,IAAMW,IAlBV,WAkBsBF,OAAR,WAAmBC,EAAe7B,KAAO6B,GACpDR,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCqJ9BQ,EApKH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAERC,EAFQ,KAECC,EAFD,OAGgBF,mBAAS,IAHzB,mBAGRG,EAHQ,KAGCC,EAHD,OAIYJ,mBAAS,IAJrB,mBAIRK,EAJQ,KAIDC,EAJC,OAKoBN,mBAAS,IAL7B,mBAKRO,EALQ,KAKGC,EALH,OAMgBR,oBAAS,GANzB,mBAMRS,EANQ,KAMCC,EAND,OAOsCV,mBAAS,IAP/C,mBAORW,EAPQ,KAOYC,EAPZ,KAShBC,qBAAU,WACRC,IAEKzB,MAAK,SAAA0B,GACJb,EAAWa,QAEhB,IAEH,IAAMC,EAAe,SAAC,GAAuB,IAArBjC,EAAoB,EAApBA,KAAMkC,EAAc,EAAdA,QAsB5B,MAAa,YAATlC,EAEA,yBAAKmC,MAtBY,CACnBC,MAAO,QACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAgBTR,GAIa,UAATlC,EAEP,yBAAKmC,MAnBU,CACjBC,MAAO,MACPC,WAAY,YACZC,SAAU,GACVC,YAAa,QACbC,aAAc,EACdC,QAAS,GACTC,aAAc,KAaTR,GAGO,MAGVS,EAAqB,SAAC3C,EAAMkC,GAChCL,EAAsB,CAAC7B,OAAMkC,YAC7BU,YAAW,WACTf,EAAsB,MACrB,MA2ECgB,EAAgBnB,EAClBR,EACAA,EAAQhB,QAAO,SAAAnB,GAAM,OACrBA,EAAOG,KAAK4D,cAAcC,SAASvB,EAAUsB,kBAEjD,OACE,6BACE,yCAEA,kBAACb,EAAD,CAAcjC,KAAM4B,EAAmB5B,KAAMkC,QAASN,EAAmBM,UAEzE,kBAAC,EAAD,CAAQhC,OAAQsB,EAAWrB,aAhBJ,SAAC6C,GAC1BrB,GAAW,GACXF,EAAauB,EAAMC,OAAOrD,UAgBxB,iDAEA,kBAAC,EAAD,CACED,IAxFY,SAACqD,GACjBA,EAAME,iBAEN,IAAMC,EAAe,CACnBjE,KAAMkC,EACNjC,GAAImC,GAGN,GAAIJ,EAAQpC,KAAI,SAAAC,GAAM,OAAIA,EAAOG,QAAM6D,SAAS3B,IAE9C,GAAI9B,OAAOC,QAAP,UAAkB6B,EAAlB,iEAA0F,CAC5F,IAAMgC,EAAUlC,EAAQmC,MAAK,SAAAC,GAAC,OAAIA,EAAEpE,OAASkC,KACvCmC,EAAc,2BAAQH,GAAR,IAAiBjE,GAAImC,IAEzCS,EACUwB,GACPjD,MAAK,SAAAQ,GACJK,EAAWD,EAAQpC,KAAI,SAAAwE,GAAC,OAAIA,EAAEpE,OAASkC,EAAUkC,EAAIxC,MACrDO,EAAW,IACXE,EAAS,IACToB,EAAmB,UAAD,4BAAiCvB,OAEpDoC,OAAM,SAAAC,GACLd,EACE,QADgB,yBACWvB,EADX,8CAGlBD,EAAWD,EAAQhB,QAAO,SAAAoD,GAAC,OAAIA,EAAErE,KAAOmE,EAAQnE,gBAI/CiC,EAAQpC,KAAI,SAAAC,GAAM,OAAIA,EAAOI,MAAI4D,SAASzB,GACjDoC,MAAM,GAAD,OAAIpC,EAAJ,uCAGLS,EACUoB,GACL7C,MAAK,SAAAqD,GACJxC,EAAWD,EAAQL,OAAO8C,IAC1BtC,EAAW,IACXE,EAAS,IACToB,EAAmB,UAAD,gBAAqBvB,QAiD3ClC,KAAMkC,EACNtB,WA/BmB,SAACkD,GACxB3B,EAAW2B,EAAMC,OAAOrD,QA+BpBT,GAAImC,EACJvB,SA7BiB,SAACiD,GACtBzB,EAASyB,EAAMC,OAAOrD,UA+BpB,uCAEA,kBAAC,EAAD,CAAShB,OAAQiE,EAAehE,aApDf,SAACuE,GACpBrB,EACQqB,GACL9C,MAAK,WACJyB,IAEGzB,MAAK,SAAAsD,GACJzC,EAAWyC,SAInBjB,EAAmB,UAAD,kBAAuBS,EAAQlE,YCvHrD2E,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2a0eda3e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Persons = ({ people, deletePerson }) => {\n\n    const clickHandler = (handledContact) => {\n        if (window.confirm(`Delete ${handledContact.name}?`)) {\n            deletePerson(handledContact)\n        } \n    }\n\n    return (\n        people.map(person => \n            <p key={person.id}>\n                {person.name} {person.nr}\n                <button onClick={() => clickHandler(person)}>Delete</button>\n            </p>\n        )\n    );\n};\n\nexport default Persons;","import React from 'react';\n\nconst ContactForm = (props) => {\n    return (\n        <form onSubmit={props.add}>\n            <div>\n                Name: <input value={props.name} onChange={props.nameChange}/>\n            </div>\n            <div>\n                Number: <input value={props.nr} onChange={props.nrChange}/>\n            </div>\n            <div>\n                <button type=\"submit\">Add</button>\n            </div>\n        </form>\n    )\n}\n\nexport default ContactForm;","import React from 'react';\n\nconst Filter = ({ filter, filterChange }) => {\n    return (\n        <div>\n            Filter: <input value={filter} onChange={filterChange}/>\n        </div>\n    )\n};\n\nexport default Filter;","import axios from 'axios';\n\nconst baseUrl = '/persons';\n\nconst getAll = () => {\n    const request = axios.get(baseUrl);\n    return request.then(response => response.data)\n}\n\nconst create = newContact => {\n    const request = axios.post(baseUrl, newContact);\n    return request.then(response => response.data)\n}\n\nconst nuke = nukedContact => {\n    const request = axios.delete(baseUrl.concat(`/${nukedContact.id}`));\n    return request.then(response => response.data)\n}\n\nconst update = updatedContact => {\n    const request = axios.put(baseUrl.concat(`/${updatedContact.id}`), updatedContact);\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, nuke, update };","import React, { useState, useEffect } from 'react';\nimport Persons from './components/Persons';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport contactService from './services/contacts';\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([]);\n  const [ newName, setNewName ] = useState('');\n  const [ newNr, setNewNr ] = useState('');\n  const [ newFilter, setNewFilter ] = useState('');\n  const [ showAll, setShowAll ] = useState(true);\n  const [ notificationObject, setNotificationObject ] = useState({});\n\n  useEffect(() => {\n    contactService\n      .getAll()\n        .then(initialContacts => {\n          setPersons(initialContacts)\n        })\n  }, []);\n\n  const Notification = ({ type, message }) => {\n\n    const successStyle = {\n      color: 'green',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n    }\n\n    const errorStyle = {\n      color: 'red',\n      background: 'lightgrey',\n      fontSize: 20,\n      borderStyle: 'solid',\n      borderRadius: 5,\n      padding: 10,\n      marginBottom: 10\n    }\n\n    if (type === 'success') {\n      return (\n        <div style={successStyle} >\n          {message}\n        </div>\n      )\n\n    } else if (type === 'error') {\n      return (\n        <div style={errorStyle}>\n          {message}\n        </div>\n      )\n    } else return null;\n  }\n\n  const changeNotification = (type, message) => {\n    setNotificationObject({type, message})\n    setTimeout(() => {\n      setNotificationObject({})\n    }, 5000)\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault();\n\n    const personObject = {\n      name: newName,\n      nr: newNr\n    }\n\n    if (persons.map(person => person.name).includes(newName)) {\n\n      if (window.confirm(`${newName} is already added to the phonebook, replace with new number?`)) {\n        const contact = persons.find(p => p.name === newName);\n        const changedContact = { ...contact, nr: newNr}\n\n        contactService\n          .update(changedContact)\n          .then(updatedContact => {\n            setPersons(persons.map(p => p.name !== newName ? p : updatedContact));\n            setNewName('');\n            setNewNr('');\n            changeNotification('success', `Updated number of ${newName}`);\n          })\n          .catch(error => {\n            changeNotification(\n              'error', `Information of ${newName} has already been deleted from the server`\n            )\n            setPersons(persons.filter(p => p.id !== contact.id))\n          })\n      }\n    }\n    else if (persons.map(person => person.nr).includes(newNr)) {\n      alert(`${newNr} is already added to the phonebook`);\n    }\n    else {\n      contactService\n        .create(personObject)\n          .then(returnedContact => {\n            setPersons(persons.concat(returnedContact))\n            setNewName('');\n            setNewNr('');\n            changeNotification('success', `Added ${newName}`);\n          })\n    }\n  }\n\n  const deletePerson = (contact) => {\n    contactService\n      .nuke(contact)\n      .then(() => {\n        contactService\n          .getAll()\n          .then(updatedContacts => {\n            setPersons(updatedContacts)\n          })\n      })\n    \n    changeNotification('success', `Deleted ${contact.name}`);\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNrChange = (event) => {\n    setNewNr(event.target.value);\n  }\n\n  const handleFilterChange = (event) => {\n    setShowAll(false);\n    setNewFilter(event.target.value);\n  }\n\n  const personsToShow = showAll\n    ? persons\n    : persons.filter(person => \n      person.name.toLowerCase().includes(newFilter.toLowerCase()));\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification type={notificationObject.type} message={notificationObject.message} />\n\n      <Filter filter={newFilter} filterChange={handleFilterChange} />\n\n      <h3>Add a new contact</h3>\n\n      <ContactForm \n        add ={addPerson}\n        name={newName}\n        nameChange={handleNameChange}\n        nr={newNr}\n        nrChange={handleNrChange}\n      />\n\n      <h3>Numbers</h3>\n\n      <Persons people={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}